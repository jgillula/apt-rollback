#!/bin/bash
# apt-rollback Script
# By Fabio Dell'Aria - fabio.dellaria@gmail.com - Mar 2020

# Check if the current user is "root" otherwise restart the script with "sudo"...
[ "$(whoami)" != "root" ] && exec sudo -- "$0" "$@"

# Instruct the Script to Abort for any command error...
set -e

# Main Variables...
# --------------------------------------------------------------------------------
LOG_FILE="/var/log/apt/history.log"
VERSION="0.9.5" # Use always the 'x.y.z' format
# --------------------------------------------------------------------------------

# Main Functions...
# --------------------------------------------------------------------------------
function undo_last_command() {
  [[ $1 = "" ]] && LAST="1" || LAST="$1"
  INT_REG='^[0-9]+$'
  if ! [[ $LAST =~ $INT_REG ]] ; then
    echo "You have to enter a valid integer value for the '--last' parameter"
    exit 1
  fi
  if [ "$LAST" == "1" ]; then
   COUNT=""
   PLUS=""
   PRONOUN="it"
  else
    COUNT=" $LAST"
    PLUS="s"
    PRONOUN="them"
  fi
  OLD_IFS="$IFS"
  if [ -f "$LOG_FILE.1.gz" ]; then
    COMMANDS_LIST_GZIP=$(zgrep -E "(Install|Remove|Purge|Upgrade): " "$LOG_FILE.1.gz" | tail -"$LAST")"\n"
  else
    COMMANDS_LIST_GZIP=""
  fi
  COMMANDS_LIST_PLAIN=$(grep -E "(Install|Remove|Purge|Upgrade): " "$LOG_FILE" | tail -"$LAST")
  COMMANDS_LIST=$(echo -e "$COMMANDS_LIST_GZIP$COMMANDS_LIST_PLAIN" | tail -"$LAST" | sed "s/[(][^)]*[)]//g" | sed "s/ ,//g" | sed 's/ *$//g' | tac)
  IFS=$'\n'
  echo "The last$COUNT APT command$PLUS, performed the following Package$PLUS operation$PLUS..."
  echo
  N=0
  STOP="True"
  for COMMAND_LINE in $COMMANDS_LIST; do
    let "N=N+1"
    COMMAND=$(echo "$COMMAND_LINE" | cut -d":" -f1)
    PACKAGES=$(echo "$COMMAND_LINE" | cut -d" " -f2-)
    if [ ! "$LAST" == "1" ]; then
      echo -e -n "\e[1;34m#$N\e[0m: "
    fi
    if [ "$COMMAND" == "Upgrade" ]; then
      echo -e -n "\e[1;31mUNSUPPORTED\e[0m: "
    else
      STOP="False"
    fi
    echo -e "$COMMAND of \e[1;32m$PACKAGES\e[0m"
  done
  if [ "$STOP" == "False" ]; then
    echo
    ANSWER=$(Yes_No "Do you wish to Undo $PRONOUN?")
    echo
    if [ "$ANSWER" == "y" ]; then
      N=1
      for COMMAND_LINE in $COMMANDS_LIST; do
        # Working...
        COMMAND=$(echo "$COMMAND_LINE" | cut -d":" -f1)
        PACKAGES=$(echo "$COMMAND_LINE" | cut -d" " -f2-)
        if [ ! "$LAST" == "1" ]; then
          echo -e -n "\e[1;34m#$N\e[0m "
        fi
        echo -e "UNDOING: $COMMAND of \e[1;32m${PACKAGES:0:40}..."
        case $COMMAND in
          "Install") COMMAND="purge" ;;
          "Purge" | "Remove") COMMAND="install" ;;
          "Upgrade") COMMAND="" ;;
        esac
        if [ ! "$COMMAND" == "" ]; then
          IFS="$OLD_IFS"
          apt-get $COMMAND -y -qq $PACKAGES >/dev/null &
          IFS=$'\n'
          #  echo dots while command is executing
          while ps | grep $! &>/dev/null; do
            echo -n "."
            sleep 0.5
          done
        else
          echo -e " \e[1;31mSKIPPED\e[0m (Undo 'Upgrade' is currently unsupported')"
        fi
        IFS="$OLD_IFS"
        echo
        echo -e "\e[0m"
        let "N=N+1"
      done
    fi
  else
    echo
    echo "apt-rollback supports the Undo only of the Install, Remove and Purge commands"
    echo "Upgrade commands aren't currently supported!"
    echo
    exit 1
  fi
  exit
}

function usage_message() {
  echo "Usage: apt-rollback [--last <n>] [--remove/--reinstall package-name] [--help]"
}

function Yes_No() {
  WARNING=""
  while true; do
    read -r -p "$WARNING$1 [y/N]? " YESNO
    if [ -z "$YESNO" ]; then
      echo "n"
      break
    else
      case $YESNO in
      y | Y)
        echo "y"
        break
        ;;
      n | N])
        echo "n"
        break
        ;;
      *) WARNING="Please answer [y]es or [n]o."$'\n' ;;
      esac
    fi
  done
}

function First_Installation() {
  if [ -f "$LOG_FILE.1.gz" ]; then
    COMMAND_GZIP=$(zgrep -m1 -E "Install: .*$1:" "$LOG_FILE.1.gz")"\n"
  else
    COMMAND_GZIP=""
  fi
  COMMAND_PLAIN=$(grep -m1 -E "Install: .*$1:" "$LOG_FILE")
  COMMAND=$(echo -e "$COMMAND_GZIP$COMMAND_PLAIN" | tail -1 | cut -d" " -f2- | sed "s/[(][^)]*[)]//g" | sed "s/ ,//g" | sed 's/ *$//g')
  echo "$COMMAND"
}
# --------------------------------------------------------------------------------

# Main Code...
# --------------------------------------------------------------------------------
echo "apt-rollback ver. $VERSION"
echo "Undo the last APT commands or a specified one"
echo

if [ ! -f "$LOG_FILE" ]; then
  echo "The APT log file '$LOG_FILE' doesn't exist."
  echo
  exit 1
fi

if [ $# -eq 0 ]; then
  echo "No arguments supplied."
  usage_message
  echo
  ANSWER=$(Yes_No "Do you wish to see the last APT command")
  if [ "$ANSWER" == "y" ]; then
    echo
    undo_last_command "1"
  fi
else
  case "$1" in
  "--last")
    undo_last_command "$2" ;;
  "--remove")
    INSTALLED_PACKAGES=$(First_Installation "$2") ;;
  "--reinstall")
    REMOVED_PACKAGES=$(First_Installation "$2") ;;
  "--help")
    usage_message
    echo
    echo "  --last       Undo the last <n> APT commands"
    echo "               Supports the undo of the only Install, Remove and Purge commands"
    echo
    echo "  --remove     Remove an INSTALLED package and related configuration files"
    echo "               Removing also all its first installed dependencies"
    echo
    echo "  --reinstall  Reinstall a REMOVED package,"
    echo "               and all its first installed dependences"
    echo "               Reproducing exactly its first installation"
    echo
    echo "  --help       Print this help"
    echo
    exit ;;
  *)
    echo "'$1' is a wrong parameter"
    echo
    usage_message
    echo ;;
  esac
fi

if [ -n "$INSTALLED_PACKAGES" ]; then
  echo -e "The selected APT command, performed the 'INSTALL' of the following packages: \e[1;32m$INSTALLED_PACKAGES\e[0m"
  echo
  ANSWER=$(Yes_No "Do you wish to REMOVE them?")
  if [ "$ANSWER" == "y" ]; then
    echo
    echo -n -e "Working:\e[1;32m"
    # Remove last Installed Packages...
    apt-get purge -y -qq $INSTALLED_PACKAGES >/dev/null &
    #  echo dots while command is executing
    while ps | grep $! &>/dev/null; do
      echo -n "."
      sleep 0.5
    done
    echo
    echo -e "\e[0mDone"
    echo
  fi
else
  if [ -n "$REMOVED_PACKAGES" ]; then
    echo -e "The selected APT command, performed the 'REMOVE' of the following packages: \e[1;32m$REMOVED_PACKAGES\e[0m"
    echo
    ANSWER=$(Yes_No "Do you wish to RE-INSTALL them?")
    if [ "$ANSWER" == "y" ]; then
      echo
      echo -n -e "Working:\e[1;32m"
      # Install last Removed Packages...
      apt-get install -y -qq $REMOVED_PACKAGES >/dev/null &
      #  echo dots while command is executing
      while ps | grep $! &>/dev/null; do
        echo -n "."
        sleep 0.5
      done
      echo
      echo -e "\e[0mDone"
      echo
    fi
  fi
fi
